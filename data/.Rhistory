data <- cbind(rep(130,5) , rep(0,5) , tab)
data <- t(data)
colnames(data) <- data[3,]
data <- as.data.frame(data)
data <- data[-3,]
data[,1] <- as.numeric(data[,1])
data[,2] <- as.numeric(data[,2])
data[,3] <- as.numeric(data[,3])
data[,4] <- as.numeric(data[,4])
data[,5] <- as.numeric(data[,5])
# Color vector
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9) , rgb(0.7,0.5,0.1,0.9) )
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4) , rgb(0.7,0.5,0.1,0.4) )
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,130,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
# Add a legend
legend(x=0.7, y=1, legend = rownames(data[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,130,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
seq(0,130,5)
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,130,30), cglwd=0.8,
#custom labels
vlcex=0.8
)
data
data <- cbind(rep(120,5) , rep(0,5) , tab)
data <- t(data)
colnames(data) <- data[3,]
data <- as.data.frame(data)
data <- data[-3,]
data[,1] <- as.numeric(data[,1])
data[,2] <- as.numeric(data[,2])
data[,3] <- as.numeric(data[,3])
data[,4] <- as.numeric(data[,4])
data[,5] <- as.numeric(data[,5])
# Color vector
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9) , rgb(0.7,0.5,0.1,0.9) )
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4) , rgb(0.7,0.5,0.1,0.4) )
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,130,30), cglwd=0.8,
#custom labels
vlcex=0.8
)
# Add a legend
legend(x=0.7, y=1, legend = rownames(data[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
###
# Survival Rate
names(df)
tab <- df[,c(16,8)] %>%
group_by(kolam) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
summary(tab)
data <- cbind(rep(130,5) , rep(0,5) , tab)
data <- t(data)
colnames(data) <- data[3,]
data <- as.data.frame(data)
data <- data[-3,]
data[,1] <- as.numeric(data[,1])
data[,2] <- as.numeric(data[,2])
data[,3] <- as.numeric(data[,3])
data[,4] <- as.numeric(data[,4])
data[,5] <- as.numeric(data[,5])
# Color vector
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9) , rgb(0.7,0.5,0.1,0.9) )
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4) , rgb(0.7,0.5,0.1,0.4) )
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,130,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
data
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,120,30), cglwd=0.8,
#custom labels
vlcex=0.8
)
# Add a legend
legend(x=0.7, y=1, legend = rownames(data[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
# Feed Convertion Rate (FCR)
names(df)
tab <- df[is.na(df$Berat.Panen)==F,c(7,10,16)] %>%
group_by(kolam) %>%
mutate(FCR = Feed.Accumulation/Berat.Panen) %>%
summarise_each(funs(mean(FCR, na.rm = TRUE)))
summary(tab)
# LAMSEL 1 TIDAK ADA
data <- cbind(rep(8,4) , rep(0,4) , tab)
data <- t(data)
colnames(data) <- data[3,]
data <- as.data.frame(data)
data <- data[-c(3:5),]
data[,1] <- as.numeric(data[,1])
data[,2] <- as.numeric(data[,2])
data[,3] <- as.numeric(data[,3])
data[,4] <- as.numeric(data[,4])
# Color vector
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9) , rgb(0.7,0.5,0.1,0.9) )
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4) , rgb(0.7,0.5,0.1,0.4) )
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=c(0,2,4,6,8), cglwd=0.8,
#custom labels
vlcex=0.8
)
data
# Color vector
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9) , rgb(0.7,0.5,0.1,0.9) )
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4) , rgb(0.7,0.5,0.1,0.4) )
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=c(0,2,4,6,8), cglwd=0.8,
#custom labels
vlcex=0.8
)
# Add a legend
legend(x=0.7, y=1, legend = rownames(data[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
# Jala Challange
# created by Muhamad Rifki Taufik
# loading packages
library(tidyverse)
library(ggplot2)
library(naniar)
library(fmsb) # spider web
setwd("C:/Users/USER/Google Drive/04. Lain-lain/jala/data")
df1 <- read.csv("daftar_siklus.csv", header=T)
df2 <- read.csv("kualitas_air.csv", header=T)
df3 <- read.csv("Budidaya.csv", header=T)
#########################
# SIKLUS PER KOLAM
str(df1)
summary(df1)
# 1. ada anomali pada kedalaman kolam, dimana menunjukkan kedalaman 100, dimana yang lain hanya sekitar 1 meter, sehingga diasumsikan ini adalah salah input/human erro, maka data 100 ini diubah menjadi 100 cm = 1 meter
df1$Kedalaman.Kolam[1] <- 1
# 2. membuat variable luas dan volume (sbg pertimbangan kebutuhan air)
df1$vol <- as.numeric(df1$Panjang.Kolam*df1$Lebar.Kolam*df1$Kedalaman.Kolam)
df1$luas <- df1$Panjang.Kolam*df1$Lebar
# 3. identifikasi lamanya siklus
df1$Tanggal.Tebar <- as.Date(df1$Tanggal.Tebar)
df1$Tanggal.Selesai.Siklus <- as.Date(df1$Tanggal.Selesai.Siklus)
df1[,c(1,2,10)] <- as.data.frame(lapply(df1[,c(1,2,10)], factor))
df1$lamaSiklus <- df1$Tanggal.Selesai.Siklus-df1$Tanggal.Tebar
df1$lamaSiklus <- as.numeric(df1$lamaSiklus)
tab <- as.data.frame(summary(df1[,-c(1,2,9)]))
df1_summary<-as.data.frame(apply(df1[,-c(1,2,9)],2,summary))
View(df1_summary)
summary(df1)
# data analysis
names(df1)
ggplot(df1, aes(x =Daerah, y = lamaSiklus)) +
geom_point(aes(size = Jumlah.Benur, fill = Kode.Siklus), shape = 21, colour = "white", alpha = 0.6) +
scale_fill_brewer(palette = "Set2") +
scale_size_continuous(range = c(1, 25)) +
labs(title = "",
subtitle = "Siklus Kolam tiap Daerah berdasarkan Lamanya Siklus dan Jumlah Benur",
caption = "Source: JALA Tech",
x = "Daerah",
y = "Lama Siklus") +
guides(size = FALSE) +
#  theme_lab(guide = "none") +
theme(panel.grid.major.x = element_blank(),
legend.position = "right",
legend.title = element_blank())+
geom_text(aes(label= Jumlah.Benur), position=position_dodge(width=1), vjust=1, size=3)+
#  theme(element_text(size=10))+
ylim(40,130)
ggplot(df1, aes(x =luas, y = Jumlah.Benur/1000)) +
geom_point(aes(size = lamaSiklus, color = Daerah),  alpha = 0.6) +
scale_fill_brewer(palette = "Set2") +
scale_size_continuous(range = c(1, 25), guide="none") +
labs(title = "",
subtitle = "Siklus Kolam tiap Daerah berdasarkan Lamanya Siklus dan Jumlah Benur",
caption = "Source: JALA Tech",
x = "Luas Kolam",
y = "Jumlah Benur (per 1k)") +
guides(scale="none") +
theme(panel.grid.major.x = element_blank(),
legend.position = "right",
legend.title = element_blank())+
geom_text(aes(label= lamaSiklus), position=position_dodge(width=0.5), vjust=1, size=4)
#  theme(element_text(size=10))
write.table(df1,"data1")
###########
# kualitas air
# merge dataset: menambahkan kode kolam dan daerah
names(df1)
df2
str(df2)
names(df2)
df <- merge(df2, df1[,c(1,2)], by="Kode.Siklus")
View(df)
# rename kode kolam
df$kolam <- ifelse(df$Kode.Kolam==3,"Purworejo 1",
ifelse(df$Kode.Kolam==4, "Purworejo 2",
ifelse(df$Kode.Kolam==2266, "Bantul",
ifelse(df$Kode.Kolam==3418, "LamSel 1",
ifelse(df$Kode.Kolam==3421, "LamSel 2",NA
)))))
str(df)
df$kolam <- as.factor(df$kolam)
df$Waktu.Pengukuran <- as.Date(df$Waktu.Pengukuran)
summary(df)
# hilangkan kode siklus dan kode kolam, karena sudah digantikan dengan var kolam
names(df)
df <- df[,-c(1,7)]
# finds missing value
any_na(df)
# How many?
n_miss(df)
prop_miss(df)
# Which variables are affected?
df %>% is.na() %>% colSums()
# Get number of missings per variable (n and %)
miss_var_summary(df)
miss_var_table(df)
# Get number of missings per participant (n and %)
miss_case_summary(df)
miss_case_table(df)
# Which variables contain the most missing variables?
#windows()
gg_miss_var(df)
# Which combinations of variables occur to be missing together?
gg_miss_upset(df)
# Get a heatmap of missingness broken down by age
is.factor(df$kolam)
#windows()
gg_miss_fct(df, fct = kolam)
summary(df)
# SUHU AIR
names(df)
df_suhu <- df[is.na(df$Suhu.Air)==F,]  # menghilangkan missing value
ggplot(df_suhu, aes(x =kolam, y = Suhu.Air)) +
geom_boxplot(aes(color=kolam), show.legend = F)+
labs(title = "",
subtitle = "Suhu Air",
caption = "Source: JALA Tech",
x = "",
y = "Suhu (celcius)") +
guides(scale="none") +
theme(panel.grid.major.x = element_blank(),
legend.position = "right",
legend.title = element_blank())+
geom_text(aes(label= ifelse(Suhu.Air > 50,Suhu.Air,"")), vjust=1, size=4)
# diasumsikan suhu diatas 50 derajat merupakan error mesin, sehingga dihilangkan
df_suhu <- df[df$Suhu.Air<50 & is.na(df$Suhu.Air)==F,]
ggplot(df_suhu, aes(x =Waktu.Pengukuran, y = Suhu.Air, color=kolam)) +
geom_point()+
geom_hline(aes(yintercept=28, linetype="temperature limit"), colour = "green", size =1,  alpha = 0.6)+
geom_hline(aes(yintercept=31, linetype="temperature limit"), colour = "green", size =1,  alpha = 0.6)+
geom_hline(aes(yintercept=mean(Suhu.Air), linetype="temperature mean"), color = "red", size =1,  alpha = 0.6)+
scale_linetype_manual(name = "limit and mean", values = c(1, 1),
guide = guide_legend(override.aes = list(color = c("green", "red"))))+
labs(title = "",
subtitle = "Suhu Air",
caption = "Source: JALA Tech",
x = "",
y = "Suhu (celcius)") +
guides(scale="none") +
theme(panel.grid.major.x = element_blank(),
legend.position = "right",
legend.title = element_blank())
# calculate how many times exceeds the limit borderies
tab1 <- df_suhu[df$Suhu.Air>31 | df$Suhu.Air<28,]
table(tab1$kolam)
table(df_suhu$Suhu.Air,df_suhu$kolam)
table(df_suhu$kolam)
# OKSIGEN TERLARUT
names(df)
df_oks <- df[is.na(df$Oksigen.Terlarut)==F,]  # menghilangkan missing value
ggplot(df_oks, aes(x =kolam, y = Oksigen.Terlarut)) +
geom_boxplot(aes(color=kolam), show.legend = F)+
geom_hline(aes(yintercept=4, linetype="oxy lower limit"), colour = "green", size =1,  alpha = 0.3)+
#    geom_hline(aes(yintercept=mean(Oksigen.Terlarut), linetype="Oxy mean"), color = "red", size =1,  alpha = 0.6)+
labs(title = "",
subtitle = "Oksigen Terlarut",
caption = "Source: JALA Tech",
x = "",
y = "ppm") +
guides(scale="none") +
theme(panel.grid.major.x = element_blank(),
legend.position = "right",
legend.title = element_blank())
# calculate how many times exceeds the limit borderies
tab2 <- df_oks[df_oks$Oksigen.Terlarut<4,]
table(tab2$kolam)
table(df_oks$kolam)
# SALINITY > 10 ppt
names(df)
df_sal <- df[is.na(df$Salinitas)==F,]  # menghilangkan missing value
ggplot(df_sal, aes(x =kolam, y = Salinitas)) +
geom_violin(aes(fill=kolam), show.legend = F)+
geom_hline(aes(yintercept=10, linetype="Salinity lower limit"), colour = "green", size =1,  alpha = 0.6)+
labs(title = "",
subtitle = "Salinity",
caption = "Source: JALA Tech",
x = "",
y = "ppt") +
guides(scale="none") +
theme(panel.grid.major.x = element_blank(),
legend.position = "right",
legend.title = element_blank())
# calculate how many times exceeds the limit borderies
tab3 <- df_sal[df_sal$Salinitas<10,]
table(tab3$kolam)
table(df_sal$kolam)
table(tab3$kolam)/table(df_sal$kolam)
# pH 7.5-8.5, density 5
names(df)
library(ggridges)
df_pH <- df[is.na(df$pH)==F,]  # menghilangkan missing value
ggplot(df_pH[,c(1,5,6)], aes(x = pH, y = kolam, fill = kolam)) +
geom_density_ridges(colour = "#bdbdbd", size = 0.5, alpha = 0.5) +
geom_vline(aes(xintercept=7.5, linetype="lower limit"), colour = "green", size =1,  alpha = 0.6)+
geom_vline(aes(xintercept=8.5, linetype="lower limit"), colour = "green", size =1,  alpha = 0.6)+
scale_x_continuous(expand = c(0,0)) +
scale_y_discrete(expand = c(0,0)) +
scale_fill_brewer(palette = "Set2") +
labs(title = "",
subtitle = "pH",
caption = "Jala Tech",
x = "",
y = "") +
theme(panel.grid.major.x = element_blank(),
legend.position = "none")
df_pH %>%
group_by(kolam) %>%
summarize(avg=mean(pH), n=n(), sd=sd(pH), se=sd/sqrt(n))
df$productivity <- df$Panen/df$luas
str(df)
table(df$kolam,df$productivity)
df3 <- read.csv("Budidaya.csv", header=T)
str(df3)
summary(df3)
names(df1)
df <- merge(df3, df1[,c(1,2,11)], by="Kode.Siklus")
names(df2)
tab <- df2[,-1] %>%
group_by(Kode.Siklus) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
df <- merge(df, tab, by="Kode.Siklus")
View(df)
str(df)
summary(df)
# rename kode kolam
df$kolam <- ifelse(df$Kode.Kolam==3,"Purworejo 1",
ifelse(df$Kode.Kolam==4, "Purworejo 2",
ifelse(df$Kode.Kolam==2266, "Bantul",
ifelse(df$Kode.Kolam==3418, "LamSel 1",
ifelse(df$Kode.Kolam==3421, "LamSel 2",NA
)))))
names(df)
df <- df[,-c(1,12)]
df$Date <- as.Date(df$Date)
df$kolam <- as.factor(df$kolam)
str(df)
summary(df)
# missing value detection
# finds missing value
any_na(df)
# How many?
n_miss(df)
prop_miss(df)
# Which variables are affected?
df %>% is.na() %>% colSums()
# Get number of missings per variable (n and %)
miss_var_summary(df)
miss_var_table(df)
# Get number of missings per participant (n and %)
miss_case_summary(df)
miss_case_table(df)
# Which variables contain the most missing variables?
#windows()
gg_miss_var(df)
# Which combinations of variables occur to be missing together?
gg_miss_upset(df)
# Get a heatmap of missingness broken down by age
is.factor(df$kolam)
#windows()
gg_miss_fct(df, fct = kolam)
df$productivity <- df$Panen/df$luas
str(df)
table(df$kolam,df$productivity)
names(df)
tab <- df[,c(16,17)] %>%
group_by(kolam) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
data <- cbind(rep(120,5) , rep(0,5) , tab)
data <- t(data)
colnames(data) <- data[3,]
data <- as.data.frame(data)
data <- data[-3,]
data[,1] <- as.numeric(data[,1])
data[,2] <- as.numeric(data[,2])
data[,3] <- as.numeric(data[,3])
data[,4] <- as.numeric(data[,4])
data[,5] <- as.numeric(data[,5])
# Color vector
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9) , rgb(0.7,0.5,0.1,0.9) )
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4) , rgb(0.7,0.5,0.1,0.4) )
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,130,30), cglwd=0.8,
#custom labels
vlcex=0.8
)
data
tab
data <- cbind(rep(120,5) , rep(0,5) , tab)
data <- t(data)
colnames(data) <- data[3,]
data <- as.data.frame(data)
data <- data[-3,]
data[,1] <- as.numeric(data[,1])
data[,2] <- as.numeric(data[,2])
data[,3] <- as.numeric(data[,3])
data[,4] <- as.numeric(data[,4])
data[,5] <- as.numeric(data[,5])
# Color vector
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9) , rgb(0.7,0.5,0.1,0.9) )
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4) , rgb(0.7,0.5,0.1,0.4) )
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,130,30), cglwd=0.8,
#custom labels
vlcex=0.8
)
# Add a legend
legend(x=0.7, y=1, legend = rownames(data[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
###
# Survival Rate
names(df)
tab <- df[,c(16,8)] %>%
group_by(kolam) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
tab
tab <- df[,c(16,8)] %>%
group_by(kolam) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
summary(tab)
data <- cbind(rep(120,5) , rep(0,5) , tab)
data <- t(data)
colnames(data) <- data[3,]
data <- as.data.frame(data)
data <- data[-3,]
data[,1] <- as.numeric(data[,1])
data[,2] <- as.numeric(data[,2])
data[,3] <- as.numeric(data[,3])
data[,4] <- as.numeric(data[,4])
data[,5] <- as.numeric(data[,5])
# Color vector
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9) , rgb(0.7,0.5,0.1,0.9) )
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4) , rgb(0.7,0.5,0.1,0.4) )
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,120,30), cglwd=0.8,
#custom labels
vlcex=0.8
)
# Add a legend
legend(x=0.7, y=1, legend = rownames(data[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
# Feed Convertion Rate (FCR)
names(df)
tab <- df[is.na(df$Berat.Panen)==F,c(7,10,16)] %>%
group_by(kolam) %>%
mutate(FCR = Feed.Accumulation/Berat.Panen) %>%
summarise_each(funs(mean(FCR, na.rm = TRUE)))
tab
